version: 2.1
orbs:
  slack: circleci/slack@4.12.5
  aws-ecr: circleci/aws-ecr@8.2.1
  helm: circleci/helm@2.0.1
  aws-eks: circleci/aws-eks@2.2.0
  kubernetes: circleci/kubernetes@1.3
jobs:
  build:
    docker:
      - image: cimg/openjdk:17.0.0-node
      - image: docker:17.05.0-ce-git
    working_directory: ~/repo
    environment:
      JVM_OPTS: -Xmx512m
      TERM: dumb
    steps:
      - checkout
      - setup_remote_docker
      - aws-ecr/build-and-push-image:
          aws-access-key-id: AWS_ACCESS_KEY_ID
          aws-secret-access-key: AWS_SECRET_ACCESS_KEY
          extra-build-args: "--compress"
          push-image: true
          region: "$REGION"
          registry-id: AWS_REGISTRY_ID
          repo: phee-integration-test
          repo-scan-on-push: true
          role-arn: arn:aws:iam::419830066942:role/CustomAdmin
          tag: latest
  upgrade-helm-chart:
    docker:
      - image: cimg/python:3.10
    parameters:
      cluster-name:
        description: "sit"
        type: string
      recreate-pods: true
    steps:
      - aws-eks/update-kubeconfig-with-authenticator:
          cluster-name: "sit"
          aws-region: "$REGION"
      - helm/upgrade-helm-chart:
          chart: "https://fynarfin.io/images/ph-ee-g2psandbox-fynarfin/ph-ee-g2psandbox-fynarfin-0.2.0.tgz"
          release-name: g2p-sandbox
          namespace: paymenthub
          recreate-pods: true
          add-repo: "https://fynarfin.io/images/ph-ee-g2psandbox-fynarfin"
          wait: true
          timeout: "300s"
          #- run: helm test g2p-sandbox --namespace=paymenthub
          # reset-values: true
          # dry-run: true
      # - helm/install-helm-chart:
      #     add-repo: "https://fynarfin.io/images/"
      #     chart: "https://fynarfin.io/images/ph-ee-g2psandbox-0.2.0.tgz"
      #     release-name: g2p-sandbox
      #     namespace: ph-test
  test-chart-gov:
    docker:
      - image: cimg/openjdk:17.0.0-node
    steps:
      - checkout
      #- run: git clone https://github.com/openmf/ph-ee-integration-test
      - run: curl -s https://ngrok-agent.s3.amazonaws.com/ngrok.asc | sudo tee /etc/apt/trusted.gpg.d/ngrok.asc >/dev/null && echo "deb https://ngrok-agent.s3.amazonaws.com buster main" | sudo tee /etc/apt/sources.list.d/ngrok.list && sudo apt update && sudo apt install ngrok
      - run:
          command: |
            ngrok http 53013 > /dev/null &
            echo -n "Extracting ngrok public url ."
            NGROK_PUBLIC_URL=""
            while [ -z "$NGROK_PUBLIC_URL" ]; do
              # Run 'curl' against ngrok API and extract public (using 'sed' command)
              export NGROK_PUBLIC_URL=$(curl --silent --max-time 10 --connect-timeout 5 \
                                        --show-error http://127.0.0.1:4040/api/tunnels | \
                                        sed -nE 's/.*public_url":"https:..([^"]*).*/\1/p')
              sleep 1
              echo -n "."
            done

            export CALLBACK_URL="https://$NGROK_PUBLIC_URL"
            echo -n "Public url ."
            echo $CALLBACK_URL
            ./gradlew test -Dcucumber.filter.tags="@gov"
            echo -n "Test execution is completed, kill ngrok"
            pkill ngrok
      - store_test_results:
          path: build/test-results/test/TEST-org.mifos.integrationtest.TestRunner.xml
  test-chart-ams:
    docker:
      - image: cimg/openjdk:17.0.0
    steps:
      - checkout
      #- run: git clone https://github.com/openmf/ph-ee-integration-test
      - run: ./gradlew test -Dcucumber.filter.tags="@amsIntegration"
      - store_test_results:
          path: build/test-results/test/TEST-org.mifos.integrationtest.TestRunner.xml
workflows:
  deploy:
    jobs:
      - build:
          context:
            - AWS
            - slack
      - upgrade-helm-chart:
          cluster-name: sit
          requires:
            - build
          context:
            - AWS
      # - install-helm-chart:
      #     cluster-name: sit
      # - delete-helm-release:
      #     cluster-name: sit
      #     requires:
      #       - install-helm-chart
      - test-chart-gov:
          requires:
            - upgrade-helm-chart
          context:
            - AWS
            - Helm
            - slack
      - test-chart-ams:
          requires:
            - upgrade-helm-chart
          context:
            - AWS
            - Helm
            - slack
